plugins {
	id 'java'
	id 'org.jetbrains.kotlin.jvm'
}

project.ext {
	kotlin_version = '1.3.10'
	coroutines_version = '1.0.1'
	javaVersion = JavaVersion.VERSION_1_8
}

version '1.0-SNAPSHOT'

sourceCompatibility = project.ext.javaVersion

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.droidmate', name: 'deviceDaemonLib', version: project.ext.driverLib_version

	// we need the jdk dependency instead of stdlib to have enhanced java features like tue 'use' function for try-with-resources
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: project.ext.kotlin_version
	compile "org.jetbrains.kotlin:kotlin-reflect:${project.ext.kotlin_version}" // because we need reflection to get annotated property values
	compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
	compile 'com.natpryce:konfig:1.6.6.0'  // configuration library

	testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
	kotlinOptions.jvmTarget = "${project.ext.javaVersion}"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "${project.ext.javaVersion}"
}

task sourcesJar(type: Jar, dependsOn: "classes") {
	classifier = 'sources'
	from sourceSets.main.allJava
	from sourceSets.main.allSource
	from sourceSets.test.allSource
}
apply plugin: 'maven'
artifacts {
	archives sourcesJar
}
